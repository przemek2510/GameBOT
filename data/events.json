[null,{"name":"memberJoin|InviteManager","temp":"memberJoined","event-type":"6","_id":"bbJRl","actions":[{"behavior":"1","interpretation":"0","code":"let memberThatJoined = tempVars(\"memberJoined\");\nlet memberUsername = memberThatJoined.username;\nlet invites = globalVars(\"globalGuildDatabase\");\nconst _this = this;\n\nasync function getInvites() {\n    const ei = invites[memberThatJoined.guild.id];\n    let guildInvites = await memberThatJoined.guild.fetchInvites();\n    guildInvites = guildInvites.array();\n    invites[memberThatJoined.guild.id] = guildInvites;\n    _this.storeValue(invites, 3, \"globalGuildDatabase\", cache);\n    const invite = guildInvites.find(i => ei.get(i.code).uses < i.uses);\n    const inviter = client.users.get(invite.inviter.id);\n    _this.storeValue(invite.code, 1, \"inviteCode\", cache);\n    _this.callNextAction(cache);\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"},{"server":"0","varName":"","info":"1","storage":"1","varName2":"serverID","name":"Store Server Info"},{"member":"2","varName":"memberJoined","dataName":"${tempVars(\"serverID\")}.inviteManager","changeType":"0","value":"tempVars(\"inviteCode\")","name":"Control Member Data"}]},{"name":"storeInvites|InviteManager","temp":"","event-type":"1","_id":"CdzGK","actions":[{"behavior":"0","interpretation":"0","code":"const fs = require('fs');\nvar invites = {};\n\nclient.guilds.forEach(g => {\n    g.fetchInvites().then(guildInvites => {\n      try{\n        invites[g.id] = guildInvites;\n      }\n      catch(error) {\n        console.log(error);\n      }\n    });\n  });\n\nthis.storeValue(invites, 3, \"globalGuildDatabase\", cache);","storage":"0","varName":"","name":"Run Script"}]},{"name":"serverJoinInvites|InviteManager","temp":"","event-type":"4","_id":"zUtVB","actions":[{"server":"0","varName":"","info":"0","storage":"1","varName2":"serverObject","name":"Store Server Info"},{"behavior":"0","interpretation":"0","code":"_this = this;\nvar guildServer = tempVars(\"serverObject\");\nvar globalGuildDatabase = globalVars(\"globalGuildDatabase\");\nserverID = tempVars(\"serverID\");\n\nasync function getInvites() {\n   var guildInvites = guildServer.fetchInvites()\n   globalGuildDatabase[guildServer.id] = guildInvites;\n   this.storeValue(invites, 3, \"globalGuildDatabase\", cache);\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"poczekaj","temp":"member","event-type":"38","_id":"KFozi","actions":[{"translateTo":"en","translateMessage":"${tempVars(\"time\")}","storage":"1","varName":"timepl","name":"Translate"},{"member":"2","varName":"member","info":"6","storage":"1","varName2":"lmsg","name":"Store Member Info"},{"message":"1","varName":"lmsg","info":"4","storage":"1","varName2":"kanal","name":"Store Message Info"},{"channel":"5","varName":"kanal","message":"Hey Hey! Wait yet `${tempVars(\"timepl\")}`  before next using this command!","storage":"0","varName2":"","name":"Send Message"}],"temp2":"time"},{"name":"LoadServerPrefixes","temp":"","event-type":"1","_id":"LoadSubs","actions":[{"behavior":"1","interpretation":"0","code":"// Make sure it only runs once!!\n//------------\n\nif(!globalVars(\"server_prefixes_loaded\")){ \n  this.callNextAction(cache);\n  this.storeValue(true, 3,\"server_prefixes_loaded\", cache);\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"0","interpretation":"0","code":"Bot.prefixes = {};\nconsole.log('(Server Prefixes) Initiating Server Prefixes....');\nBot.checkCommand = function(msg) {\n\tconst fs = require(\"fs\");\n\tconst path = require(\"path\");\n\n\ttry {\n\t\tconst defaultTag = Files.data.settings.tag;\n\t\tconst separator = Files.data.settings.separator || '\\\\s+';\n\t\n\t\tlet content = msg.content;\n\t\tlet guild = msg.guild;\n\t\n\t\tcontent = content.split(new RegExp(separator))[0];\n\t\n\t\tconst filePath = path.join(\"data\",\"serverPrefixes.json\");\t\t\n\t\tif(fs.existsSync(filePath)){\n\t\t\tlet saved_prefixes = fs.readFileSync(filePath, \"utf8\");\n\t\t\ttry {\n\t\t\t\tthis.prefixes = JSON.parse(saved_prefixes);\t\t\n\t\t\t} catch(err){}\t\t\t\n\t\t}else{\n\t\t\tthis.prefixes[guild.id] = defaultTag;\n\t\t\tfs.writeFileSync(filePath, JSON.stringify(this.prefixes));\n\t\t}\n\n\t\tlet tag = this.prefixes[guild.id] || defaultTag;\n\n                if(Array.isArray(this.prefixes)){ \n                  console.log(\"Old version serverPrefixes.json detected.  Please remove serverPrefixes.json and restart your bot otherwise setting new prefixes will not work!\")\n                  tag = defaultTag;\n                }\n\n\t\tif(tag){\t\n\t\t\tif(guild) guild.tag = tag;\t\n\n\t\t\tif(content.startsWith(tag)) {\t\t\t\t\n\t\t\t\tlet command = content.substring(tag.length);\n\t\t\t\tif(command) {       \n\t\t\t\t\tif(!Bot._caseSensitive) {\n\t\t\t\t\t\tcommand = command.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst cmd = Bot.$cmds[command];\n\t\t\t\t\tif(cmd) {\t\t\t\t\t\n\t\t\t\t\t\tActions.preformActions(msg, cmd);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\t\t\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n   \n};\nconsole.log('(Server Prefixes) Loaded Function Overwrite: CheckCommand');\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"botActivity","temp":"","event-type":"1","_id":"VFscP","actions":[{"activity":"2","nameText":"üì± v.0.01| üîî Mention me","url":"","stat":"0","name":"Set Bot Activity"},{"time":"10","measurement":"1","name":"Wait"},{"activity":"2","nameText":"üìÅ Our side | g!website","url":"","stat":"0","name":"Set Bot Activity"},{"time":"10","measurement":"1","name":"Wait"},{"activity":"0","nameText":"üéÆ Play new games","url":"","stat":"0","name":"Set Bot Activity"},{"time":"10","measurement":"1","name":"Wait"},{"call":"1","name":"Jump to Action"}]},{"name":"autorole","temp":"member","event-type":"6","_id":"pQXlM","actions":[{"server":"0","varName":"","dataName":"autorole","comparison":"1","value":"1","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"member":"2","varName2":"member","role":"4","varName":"Autorole.Role","name":"Add Member Role"}]}]